buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.dm.gradle:gradle-bundle-plugin:0.8.5'
    }
}

repositories {
	mavenLocal()
	maven {
		url "http://cdn.repository.liferay.com/nexus/content/groups/public"
	}
}

apply plugin: 'java'
apply plugin: 'org.dm.bundle'

dependencies {
	compileOnly group: "com.liferay.portal",  name: "com.liferay.portal.kernel", version: "2.0.0"
	compileOnly group: "javax.portlet",       name: "portlet-api",               version: "2.0"
	compileOnly group: "javax.servlet",       name: "servlet-api",               version: "2.5"
	compileOnly group: "org.osgi",            name: "org.osgi.compendium",       version: "5.0.0"
	compileOnly group: 'javax.ws.rs',         name: 'javax.ws.rs-api',           version: '2.0.1'
	
	// any dependencies in the 'compile' configuration WILL be included in the generated JAR. Use the
	// 'compileOnly' configuration for compiling with items available inside the OSGi container
	compile group: 'com.fasterxml.jackson.jaxrs', name: 'jackson-jaxrs-json-provider', version: jackson_version
	compile 'org.apache.commons:commons-lang3:3.4'
	compile 'org.apache.httpcomponents:httpclient:4.5'
	compile 'org.codehaus.jackson:jackson-mapper-asl:1.9.11'
	compile 'org.apache.avalon.framework:avalon-framework-impl:4.3.1'
	compile 'commons-logging:commons-logging:1.1.1'
	compile group: 'logkit', name: 'logkit', version: '1.0.1'
	compile group: 'joda-time', name: 'joda-time', version: '2.3'
	compile group: 'org.joda', name: 'joda-convert', version: '1.8.1'
	compile group: 'com.google.collections', name: 'google-collections', version: '1.0-rc2'
	compile group: 'com.google.guava', name: 'guava', version: '13.0-rc1'
	
}

def bundleClassPath() {
    def list = []
    configurations.compile.each {
        list += 'OSGI-INF/lib/' + it.name
    }
    return list.join(',')
}

def includeResource() {
  def list = []
  configurations.compile.each {
    list += 'OSGI-INF/lib/' + it.name + "=" + it.path
  }
  return list.join(',')
}

bundle {
  instructions << [
    'Bundle-Version'   : '1.0.0',
    '-buildpath'       : 'osgi.annotation; version=6.0.1,osgi.core; version=6.0,osgi.cmpn; version=6.0',
    'Export-Package'   : 'com.xtivia.salesforce',
    'Import-Package'   : 'javax.servlet.http,javax.servlet,*',    
    'Bundle-ClassPath' : bundleClassPath(),
    '-includeresource' : includeResource(),    
    '-wab'             : '',
  ]
}